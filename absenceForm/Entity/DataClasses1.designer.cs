#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace absenceForm.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Ista")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void Insertabsence(absence instance);
    partial void Updateabsence(absence instance);
    partial void Deleteabsence(absence instance);
    partial void Insertadministrateur(administrateur instance);
    partial void Updateadministrateur(administrateur instance);
    partial void Deleteadministrateur(administrateur instance);
    partial void Insertautorisation(autorisation instance);
    partial void Updateautorisation(autorisation instance);
    partial void Deleteautorisation(autorisation instance);
    partial void Insertformateur(formateur instance);
    partial void Updateformateur(formateur instance);
    partial void Deleteformateur(formateur instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::absenceForm.Properties.Settings.Default.IstaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<absence> absence
		{
			get
			{
				return this.GetTable<absence>();
			}
		}
		
		public System.Data.Linq.Table<administrateur> administrateur
		{
			get
			{
				return this.GetTable<administrateur>();
			}
		}
		
		public System.Data.Linq.Table<autorisation> autorisation
		{
			get
			{
				return this.GetTable<autorisation>();
			}
		}
		
		public System.Data.Linq.Table<formateur> formateur
		{
			get
			{
				return this.GetTable<formateur>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.absence")]
	public partial class absence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _code_abs;
		
		private string _cin;
		
		private System.Nullable<decimal> _heures_absence;
		
		private string _dateDebut;
		
		private string _dateFin;
		
		private string _justification;
		
		private System.Nullable<decimal> _heures_justifiés;
		
		private EntityRef<formateur> _formateur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncode_absChanging(int value);
    partial void Oncode_absChanged();
    partial void OncinChanging(string value);
    partial void OncinChanged();
    partial void Onheures_absenceChanging(System.Nullable<decimal> value);
    partial void Onheures_absenceChanged();
    partial void OndateDebutChanging(string value);
    partial void OndateDebutChanged();
    partial void OndateFinChanging(string value);
    partial void OndateFinChanged();
    partial void OnjustificationChanging(string value);
    partial void OnjustificationChanged();
    partial void Onheures_justifiésChanging(System.Nullable<decimal> value);
    partial void Onheures_justifiésChanged();
    #endregion
		
		public absence()
		{
			this._formateur = default(EntityRef<formateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_abs", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int code_abs
		{
			get
			{
				return this._code_abs;
			}
			set
			{
				if ((this._code_abs != value))
				{
					this.Oncode_absChanging(value);
					this.SendPropertyChanging();
					this._code_abs = value;
					this.SendPropertyChanged("code_abs");
					this.Oncode_absChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cin", DbType="VarChar(10)")]
		public string cin
		{
			get
			{
				return this._cin;
			}
			set
			{
				if ((this._cin != value))
				{
					if (this._formateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncinChanging(value);
					this.SendPropertyChanging();
					this._cin = value;
					this.SendPropertyChanged("cin");
					this.OncinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heures_absence", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> heures_absence
		{
			get
			{
				return this._heures_absence;
			}
			set
			{
				if ((this._heures_absence != value))
				{
					this.Onheures_absenceChanging(value);
					this.SendPropertyChanging();
					this._heures_absence = value;
					this.SendPropertyChanged("heures_absence");
					this.Onheures_absenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateDebut", DbType="VarChar(10)")]
		public string dateDebut
		{
			get
			{
				return this._dateDebut;
			}
			set
			{
				if ((this._dateDebut != value))
				{
					this.OndateDebutChanging(value);
					this.SendPropertyChanging();
					this._dateDebut = value;
					this.SendPropertyChanged("dateDebut");
					this.OndateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateFin", DbType="VarChar(10)")]
		public string dateFin
		{
			get
			{
				return this._dateFin;
			}
			set
			{
				if ((this._dateFin != value))
				{
					this.OndateFinChanging(value);
					this.SendPropertyChanging();
					this._dateFin = value;
					this.SendPropertyChanged("dateFin");
					this.OndateFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_justification", DbType="VarChar(250)")]
		public string justification
		{
			get
			{
				return this._justification;
			}
			set
			{
				if ((this._justification != value))
				{
					this.OnjustificationChanging(value);
					this.SendPropertyChanging();
					this._justification = value;
					this.SendPropertyChanged("justification");
					this.OnjustificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heures_justifiés", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> heures_justifiés
		{
			get
			{
				return this._heures_justifiés;
			}
			set
			{
				if ((this._heures_justifiés != value))
				{
					this.Onheures_justifiésChanging(value);
					this.SendPropertyChanging();
					this._heures_justifiés = value;
					this.SendPropertyChanged("heures_justifiés");
					this.Onheures_justifiésChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="formateur_absence", Storage="_formateur", ThisKey="cin", OtherKey="cin", IsForeignKey=true)]
		public formateur formateur
		{
			get
			{
				return this._formateur.Entity;
			}
			set
			{
				formateur previousValue = this._formateur.Entity;
				if (((previousValue != value) 
							|| (this._formateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._formateur.Entity = null;
						previousValue.absence.Remove(this);
					}
					this._formateur.Entity = value;
					if ((value != null))
					{
						value.absence.Add(this);
						this._cin = value.cin;
					}
					else
					{
						this._cin = default(string);
					}
					this.SendPropertyChanged("formateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.administrateur")]
	public partial class administrateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _userA;
		
		private string _passwordA;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserAChanging(string value);
    partial void OnuserAChanged();
    partial void OnpasswordAChanging(string value);
    partial void OnpasswordAChanged();
    #endregion
		
		public administrateur()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userA", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string userA
		{
			get
			{
				return this._userA;
			}
			set
			{
				if ((this._userA != value))
				{
					this.OnuserAChanging(value);
					this.SendPropertyChanging();
					this._userA = value;
					this.SendPropertyChanged("userA");
					this.OnuserAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordA", DbType="VarChar(30)")]
		public string passwordA
		{
			get
			{
				return this._passwordA;
			}
			set
			{
				if ((this._passwordA != value))
				{
					this.OnpasswordAChanging(value);
					this.SendPropertyChanging();
					this._passwordA = value;
					this.SendPropertyChanged("passwordA");
					this.OnpasswordAChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.autorisation")]
	public partial class autorisation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codeAuto;
		
		private string _cin;
		
		private string _cas;
		
		private System.Nullable<decimal> _heures_autorisé;
		
		private string _dateDebut;
		
		private string _dateFin;
		
		private EntityRef<formateur> _formateur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodeAutoChanging(int value);
    partial void OncodeAutoChanged();
    partial void OncinChanging(string value);
    partial void OncinChanged();
    partial void OncasChanging(string value);
    partial void OncasChanged();
    partial void Onheures_autoriséChanging(System.Nullable<decimal> value);
    partial void Onheures_autoriséChanged();
    partial void OndateDebutChanging(string value);
    partial void OndateDebutChanged();
    partial void OndateFinChanging(string value);
    partial void OndateFinChanged();
    #endregion
		
		public autorisation()
		{
			this._formateur = default(EntityRef<formateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeAuto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codeAuto
		{
			get
			{
				return this._codeAuto;
			}
			set
			{
				if ((this._codeAuto != value))
				{
					this.OncodeAutoChanging(value);
					this.SendPropertyChanging();
					this._codeAuto = value;
					this.SendPropertyChanged("codeAuto");
					this.OncodeAutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cin", DbType="VarChar(10)")]
		public string cin
		{
			get
			{
				return this._cin;
			}
			set
			{
				if ((this._cin != value))
				{
					if (this._formateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncinChanging(value);
					this.SendPropertyChanging();
					this._cin = value;
					this.SendPropertyChanged("cin");
					this.OncinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cas", DbType="VarChar(20)")]
		public string cas
		{
			get
			{
				return this._cas;
			}
			set
			{
				if ((this._cas != value))
				{
					this.OncasChanging(value);
					this.SendPropertyChanging();
					this._cas = value;
					this.SendPropertyChanged("cas");
					this.OncasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heures_autorisé", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> heures_autorisé
		{
			get
			{
				return this._heures_autorisé;
			}
			set
			{
				if ((this._heures_autorisé != value))
				{
					this.Onheures_autoriséChanging(value);
					this.SendPropertyChanging();
					this._heures_autorisé = value;
					this.SendPropertyChanged("heures_autorisé");
					this.Onheures_autoriséChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateDebut", DbType="VarChar(12)")]
		public string dateDebut
		{
			get
			{
				return this._dateDebut;
			}
			set
			{
				if ((this._dateDebut != value))
				{
					this.OndateDebutChanging(value);
					this.SendPropertyChanging();
					this._dateDebut = value;
					this.SendPropertyChanged("dateDebut");
					this.OndateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateFin", DbType="VarChar(12)")]
		public string dateFin
		{
			get
			{
				return this._dateFin;
			}
			set
			{
				if ((this._dateFin != value))
				{
					this.OndateFinChanging(value);
					this.SendPropertyChanging();
					this._dateFin = value;
					this.SendPropertyChanged("dateFin");
					this.OndateFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="formateur_autorisation", Storage="_formateur", ThisKey="cin", OtherKey="cin", IsForeignKey=true)]
		public formateur formateur
		{
			get
			{
				return this._formateur.Entity;
			}
			set
			{
				formateur previousValue = this._formateur.Entity;
				if (((previousValue != value) 
							|| (this._formateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._formateur.Entity = null;
						previousValue.autorisation.Remove(this);
					}
					this._formateur.Entity = value;
					if ((value != null))
					{
						value.autorisation.Add(this);
						this._cin = value.cin;
					}
					else
					{
						this._cin = default(string);
					}
					this.SendPropertyChanged("formateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.formateur")]
	public partial class formateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _cin;
		
		private string _nom;
		
		private string _prenom;
		
		private string _tele;
		
		private EntitySet<absence> _absence;
		
		private EntitySet<autorisation> _autorisation;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncinChanging(string value);
    partial void OncinChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnteleChanging(string value);
    partial void OnteleChanged();
    #endregion
		
		public formateur()
		{
			this._absence = new EntitySet<absence>(new Action<absence>(this.attach_absence), new Action<absence>(this.detach_absence));
			this._autorisation = new EntitySet<autorisation>(new Action<autorisation>(this.attach_autorisation), new Action<autorisation>(this.detach_autorisation));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cin", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string cin
		{
			get
			{
				return this._cin;
			}
			set
			{
				if ((this._cin != value))
				{
					this.OncinChanging(value);
					this.SendPropertyChanging();
					this._cin = value;
					this.SendPropertyChanged("cin");
					this.OncinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(40)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(40)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tele", DbType="VarChar(14)")]
		public string tele
		{
			get
			{
				return this._tele;
			}
			set
			{
				if ((this._tele != value))
				{
					this.OnteleChanging(value);
					this.SendPropertyChanging();
					this._tele = value;
					this.SendPropertyChanged("tele");
					this.OnteleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="formateur_absence", Storage="_absence", ThisKey="cin", OtherKey="cin")]
		public EntitySet<absence> absence
		{
			get
			{
				return this._absence;
			}
			set
			{
				this._absence.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="formateur_autorisation", Storage="_autorisation", ThisKey="cin", OtherKey="cin")]
		public EntitySet<autorisation> autorisation
		{
			get
			{
				return this._autorisation;
			}
			set
			{
				this._autorisation.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_absence(absence entity)
		{
			this.SendPropertyChanging();
			entity.formateur = this;
		}
		
		private void detach_absence(absence entity)
		{
			this.SendPropertyChanging();
			entity.formateur = null;
		}
		
		private void attach_autorisation(autorisation entity)
		{
			this.SendPropertyChanging();
			entity.formateur = this;
		}
		
		private void detach_autorisation(autorisation entity)
		{
			this.SendPropertyChanging();
			entity.formateur = null;
		}
	}
}
#pragma warning restore 1591
